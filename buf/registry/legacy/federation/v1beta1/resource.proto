// Copyright 2023-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.registry.legacy.federation.v1beta1;

import "buf/registry/priv/extension/v1beta1/extension.proto";
import "buf/validate/validate.proto";

option go_package = "buf.build/gen/go/bufbuild/registry/protocolbuffers/go/buf/registry/legacy/federation/v1beta1";

// A reference to any of:
//   - Module
//   - Label
//   - Commit
//
// The id or name is resolved to a specific resource.
// If an id is passed, this is interpreted as being the id of the resource.
// If a name is passed, the semantics according to ResourceRef.Name are applied.
//
// ResourceRefs can only be used in requests, and only for read-only RPCs, that is
// you should not use an arbitrary reference when modifying a specific resource.
//
// ResourceRefs cannot reference archived Labels. The only way to retrieve an archived Label
// is to use LabelService.GetLabels.
//
// See the package documentation for more details. You should likely use buf.registry.module.v1beta1
// and not this package.
message ResourceRef {
  option (buf.registry.priv.extension.v1beta1.message).request_only = true;
  option (buf.registry.priv.extension.v1beta1.message).no_side_effects_only = true;

  // The fully-qualified name component of a ResourceRef.
  //
  // The following semantics are applied:
  //   - If the child oneof is not specified, the name is interpreted to reference a Module.
  //   - If label_name is specified, the name is interpreted to reference a Label.
  //   - If ref is specified, it is interpreted to be either an id or name.
  //     - If an id, this is equivalent to setting the id field on ResourceRef. However,
  //       backends can choose to validate that the owner and module fields match the resource
  //       referenced, as additional validation.
  //     - If a name, this is interpreted to be a Label name or an ID of a Commit without any dashes.
  //     - If there is a conflict between names across resources (for example, there is a Commit id
  //       and Label name of the same value), the following order of precedence is applied:
  //       - Commit
  //       - Label
  //
  // Names can only be used in requests, and only for read-only RPCs, that is
  // you should not use an arbitrary reference when modifying a specific resource.
  message Name {
    // The name of the User or Organization that owns the resource.
    string owner = 1 [
      (buf.validate.field).required = true,
      (buf.validate.field).string.max_len = 32
    ];
    // The name of the Module the contains or is the resource.
    string module = 2 [(buf.validate.field).string = {
      min_len: 2,
      max_len: 100
    }];
    // If the oneof is present but empty, this should be treated as not present.
    oneof child {
      // The name of the Label.
      //
      // If this value is present but empty, this should be treated as not present, that is
      // an empty value is the same as a null value.
      string label_name = 3 [(buf.validate.field).string.max_len = 250];
      // The untyped reference, applying the semantics as documented on the Name message.
      //
      // If this value is present but empty, this should be treated as not present, that is
      // an empty value is the same as a null value.
      string ref = 4;
    }
  }

  oneof value {
    option (buf.validate.oneof).required = true;
    // The id of the resource.
    string id = 1 [(buf.validate.field).string.uuid = true];
    // The fully-qualified name of the resource.
    Name name = 2;
  }

  // The registry hostname of the resource.
  string registry = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.hostname = true
  ];
}
