// Copyright 2023-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.registry.owner.v1;

import "buf/registry/owner/v1/organization.proto";
import "buf/registry/owner/v1/user.proto";
import "buf/registry/priv/extension/v1beta1/extension.proto";
import "buf/validate/validate.proto";

option go_package = "buf.build/gen/go/bufbuild/registry/protocolbuffers/go/buf/registry/owner/v1";

// A User or Organization.
message Owner {
  option (buf.registry.priv.extension.v1beta1.message).response_only = true;

  option (buf.validate.message).oneof = {
    fields: ["user", "organization"]
    required: true
  };
  // The User.
  User user = 1;
  // The Organization.
  Organization organization = 2;
}

// OwnerRef is a reference to a User or Organization, either an id or a name.
//
// This is used in requests.
message OwnerRef {
  option (buf.registry.priv.extension.v1beta1.message).request_only = true;

  option (buf.validate.message).oneof = {
    fields: ["id", "name"]
    required: true
  };
  // The id of the User or Organization.
  string id = 1 [(buf.validate.field).string.tuuid = true];
  // The name of the User or Organization.
  string name = 2 [(buf.validate.field).string = {
    min_len: 2
    max_len: 32
    pattern: "^[a-z][a-z0-9-]*[a-z0-9]$"
  }];
}
