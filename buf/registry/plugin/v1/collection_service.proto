// Copyright 2023-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.registry.plugin.v1;

import "buf/registry/plugin/v1/collection.proto";
import "buf/registry/plugin/v1/plugin.proto";
import "buf/validate/validate.proto";

option go_package = "buf.build/gen/go/bufbuild/registry/protocolbuffers/go/buf/registry/plugin/v1";

// Operate on Collections.
service CollectionService {
  // Get Collections.
  rpc GetCollections(GetCollectionsRequest) returns (GetCollectionsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }
  // List Collections for a given Plugin.
  rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }
  // Get the Collections for the given Plugins.
  rpc GetPluginCollectionAssociations(GetPluginCollectionAssociationsRequest) returns (GetPluginCollectionAssociationsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }
}

message GetCollectionsRequest {
  // The Collections to request.
  repeated CollectionRef collection_refs = 1 [
    (buf.validate.field).repeated.min_items = 1,
    (buf.validate.field).repeated.max_items = 250
  ];
}

message GetCollectionsResponse {
  // The retrieved Collections in the same order as requested.
  repeated Collection collections = 1 [(buf.validate.field).repeated.min_items = 1];
}

message ListCollectionsRequest {
  // The list order.
  enum Order {
    ORDER_UNSPECIFIED = 0;
    // Order by create_time newest to oldest.
    ORDER_CREATE_TIME_DESC = 1;
    // Order by create_time oldest to newest.
    ORDER_CREATE_TIME_ASC = 2;
  }
  // The maximum number of items to return.
  //
  // The default value is 10.
  uint32 page_size = 1 [(buf.validate.field).uint32.lte = 250];
  // The page to start from.
  //
  // If empty, the first page is returned.
  string page_token = 2 [(buf.validate.field).string.max_len = 4096];
  // The order to return the Plugins.
  //
  // If not specified, defaults to ORDER_CREATE_TIME_DESC.
  Order order = 3 [(buf.validate.field).enum.defined_only = true];
}

message ListCollectionsResponse {
  // The next page token.
  //
  // If empty, there are no more pages.
  string next_page_token = 1 [(buf.validate.field).string.max_len = 4096];
  // The listed Collections.
  repeated Collection collections = 2;
}

message GetPluginCollectionAssociationsRequest {
  // The Plugins to request Collections for.
  repeated PluginRef plugin_refs = 1 [
    (buf.validate.field).repeated.min_items = 1,
    (buf.validate.field).repeated.max_items = 250
  ];
}

message GetPluginCollectionAssociationsResponse {
  // The Associations for the requested Plugins.
  message Association {
    // The id of the Plugin.
    string plugin_id = 1;
    // The collection ids associated with the Plugin.
    repeated string collection_ids = 2;
  }
  // The Associations for the requested Plugins in the same order as requested.
  repeated Association associations = 1;
}
