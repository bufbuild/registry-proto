// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.registry.module.v1beta1;

import "buf/registry/module/v1beta1/digest.proto";
import "buf/registry/priv/extension/v1beta1/extension.proto";
import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "buf.build/gen/go/bufbuild/registry/protocolbuffers/go/buf/registry/module/v1beta1";

// The VCS type, currently only git.
enum VCSType {
  VCS_TYPE_UNSPECIFIED = 0;
  // The git version control system.
  VCS_TYPE_GIT = 1;
}

// VCS commit information.
//
// Stored within a Commit, not a resource on its own.
// TODO: We could go back to these being its own resource, why not?
message VCSCommit {
  // The type of VCS that the Commit originated from.
  VCSType type = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).enum.defined_only = true
  ];
  // The VCS hash of the Commit.
  string hash = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.pattern = "^[0-9a-fA-F]{40}$"
  ];
  // The URL of of the commit within the VCS.
  string url = 3 [(buf.validate.field).string.uri = true];
}
